{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","components/common/pagination.jsx","components/common/listgroup.jsx","services/genreService.js","components/common/like.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/searchBox.jsx","components/component.jsx","utils/paginate.js","components/rental.jsx","components/notFound.jsx","components/customers.jsx","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout..jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","getMovie","movieId","http","getMovieUrl","id","concat","saveMovie","movie","_id","body","Object","objectSpread","Pagination","state","_this$props","this","props","itemCount","pageSize","currentPage","onPageChange","console","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","aria-label","className","map","p","key","onClick","href","Component","ListGroup","items","onItemSelect","textProperty","selectedItem","valueProperty","x","defaultProps","getGenres","Like","classes","liked","style","cursor","onLike","aria-hidden","TableBody","createKey","item","column","path","content","_this2","data","columns","renderCell","TableHeader","raiseSort","newSortColumn","_this","sortColumn","order","onSort","renderSortIcon","label","Table","_ref","tableHeader","tableBody","tokenKey","getJwt","localStorage","getItem","login","_x","_x2","_login","apply","arguments","_callee","email","password","_yield$http$post","regenerator_default","wrap","_context","prev","next","sent","setItem","stop","authService","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLLike","deleteColumn","onDelete2","user","auth","isAdmin","push","paginatemov","table","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Mov","mov","genres","searchQuery","selectedGenre","handleSearch","query","setState","handleSort","handleGenresSelect","genre","handlePageChange","page","handleLike","assertThisInitialized","newL","toConsumableArray","index","indexOf","handleDelete","newMov","filter","obj","handleDelete2","asyncToGenerator","mark","originalMovies","t0","movies","newgenres","_this$state","filtered","m","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","moveCount","_this$getPageData","getPageData","listgroup","marginBootom","fontWeight","fontSize","searchBox","moviesTable","pagination","Rentals","NotFound","Customers","NavBar","data-toggle","data-target","aria-controls","aria-expanded","NavLink","Fragment","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validateProperty","defineProperty","schema","Joi","validate","details","message","abortEarly","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","undefined","common_input","val","common_select","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","RegisterForm","Logout","ProtectedRoute","component","render","Route","App","lib","navbar","Switch","protectedRoute","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0497f5b.chunk.js","sourcesContent":["//import Raven from 'raven-js';\r\n\r\nfunction init()\r\n{\r\n    //  Raven.config('https://f7711ce1b6324ebb9f4a438ffcbf5aba@o503318.ingest.sentry.io/5588340', {\r\n    //   release: \"1.3.0\",\r\n    //   environment: 'development-test',\r\n    // }).install()\r\n    \r\n}\r\n\r\nfunction log(error)\r\n{\r\n    // Raven.captureException(error);\r\n\r\n\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n};","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport logger from './logService';\r\n//import auth from './authService';\r\n\r\n//axios.defaults.headers.common['x-auth-token']=auth.getJwt();\r\n\r\naxios.defaults.baseURL=process.env.REACT_APP_API_URL; // that value be replace with different value dependes on the way we build the app\r\n\r\n\r\n\r\n\r\n//console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",process.env.REACT_APP_API_URL);\r\n\r\n\r\nfunction setJwt(jwt){\r\n \r\n    axios.defaults.headers.common[\"x-auth-token\"]=jwt;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\naxios.interceptors.response.use(null,error=>{\r\n\r\n   const expectedError=error.response&&error.response.status>=400&&error.response.status<500;\r\n\r\n    if(!expectedError)\r\n        { logger.log(error);//unexpected error!\r\n         toast(\"unexpeced error occured\");}  \r\n  \r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nexport default{\r\nget:axios.get, \r\npost:axios.post,\r\nput:axios.put,\r\ndelete:axios.delete,\r\nsetJwt\r\n};","import http from './httpService';\r\n\r\n// import {apiUrl} from '../config.json';\r\n\r\n// const apiEndpoint=apiUrl + \"/movies\";\r\nconst apiEndpoint=\"/movies\";\r\n\r\nexport function getMovies()\r\n{\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\n\r\nexport function deleteMovie(movieId){\r\n\r\n  return http.delete(getMovieUrl(movieId));\r\n}\r\n\r\nexport function getMovie(movieId)\r\n{\r\n    return http.get(getMovieUrl(movieId));\r\n}\r\n\r\nfunction getMovieUrl(id){\r\n      // private function with no export!\r\n    // return apiEndpoint+'/'+id;\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function saveMovie(movie) {\r\n    if(movie._id){\r\n        const body={...movie};\r\n        delete body._id;\r\n        return http.put(getMovieUrl(movie._id),  body);//update the object we do not want to have id property in the object body we pass because it is can be confusing if in the property and the url will be different in the id\r\n\r\n    }\r\n    \r\n    return http.post(apiEndpoint,movie);// to add the movie if it do not have id property\r\n\r\n  }","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nclass Pagination extends Component {\r\n    state = {  }\r\n    render() { \r\n\r\n\r\n       const {itemCount, pageSize, currentPage, onPageChange}= this.props;\r\n       console.log(\"CurrentPage\",currentPage);\r\n       const pagesCount=Math.ceil(itemCount/pageSize);\r\n       if (pagesCount===1) return null;\r\n       const pages= _.range(1,pagesCount+1);//we add 1 to the pagesCount because it do not include the last!\r\n\r\n\r\n        return (<nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n         \r\n         {  pages.map(p=><li key={p} className={ p===currentPage ? \"page-item active \" : \"page-item\" } \r\n                        onClick={()=>onPageChange(p)}>\r\n                        <a className=\"page-link\" href=\"#\">{p}</a>\r\n             \r\n                        </li>)\r\n                        \r\n        }    \r\n\r\n        </ul>\r\n      </nav>  );\r\n    }\r\n}\r\n\r\nPagination.propTypes={\r\n    itemCount:PropTypes.number.isRequired,\r\n     pageSize:PropTypes.number.isRequired,\r\n      currentPage:PropTypes.number.isRequired,\r\n       onPageChange:PropTypes.func.isRequired\r\n    \r\n    };\r\nexport default Pagination;","import React, { Component } from 'react';\r\n\r\nclass ListGroup extends Component {\r\n    \r\n    render() { \r\n\r\n      const {items, onItemSelect,textProperty,selectedItem, valueProperty}=this.props;\r\n        return (<ul className=\"list-group\" >\r\n          \r\n        {items.map(x=><li     \r\n        onClick={()=>{onItemSelect(x)}} key={x[valueProperty]} \r\n        className={ selectedItem===x ? \"list-group-item active\":\"list-group-item\" }>{x[textProperty]}</li>)}\r\n        \r\n      </ul>  );\r\n    }\r\n}\r\nListGroup.defaultProps={\r\ntextProperty:\"name\",\r\nvalueProperty:\"_id\"\r\n};\r\nexport default ListGroup;","import http from './httpService';\r\n// import {apiUrl} from '../config.json';\r\n\r\n\r\nexport function getGenres() {\r\n   // return  http.get(apiUrl + \"/genres\");\r\n   return  http.get(\"/genres\");\r\n  }\r\n  ","import React from 'react';\r\nconst Like =props=> {\r\n    \r\n \r\n        let classes=\"fa fa-heart\" ;\r\n        if(!props.liked) classes+=\"-o\";\r\n        return (<i className={classes} style={{cursor:\"pointer\"}} onClick={props.onLike} aria-hidden=\"true\"></i>  );\r\n\r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nclass TableBody extends Component {\r\n    renderCell(item,column){\r\n        if(column.content) return column.content(item);\r\n        return _.get(item,column.path);\r\n    }\r\n    \r\n   createKey=(item, column)=>{ return item._id+(column.path || column.key);}\r\n\r\n\r\n    render() { \r\n     const {data, columns} =this.props;\r\n\r\n        return ( <tbody>\r\n            {data.map(item=>\r\n            <tr key={item._id}>\r\n                {columns.map(column=><td key={this.createKey(item, column)}>{ this.renderCell(item,column) }</td>)}\r\n            </tr>)}\r\n            \r\n        </tbody> );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React, { Component } from 'react';\r\n//columns:array\r\n//sortColumn:object\r\n//onSort:function\r\n\r\nclass TableHeader extends Component {\r\n\r\n\r\n    raiseSort=path=>{\r\n        \r\n        const newSortColumn={...this.props.sortColumn};\r\n          if(newSortColumn.path===path){\r\n            \r\n              newSortColumn.order=(newSortColumn.order==='asc') ? 'desc' :'asc';\r\n              \r\n          }\r\n          else{\r\n             newSortColumn.path=path;\r\n             newSortColumn.order='asc';\r\n          }\r\n    \r\n        \r\n          this.props.onSort(newSortColumn);\r\n    \r\n       };\r\n\r\n       renderSortIcon=(column)=>{\r\n        const {sortColumn}=this.props;\r\n         if(column.path!==sortColumn.path)\r\n         {\r\n             return null;\r\n         }\r\n         if(sortColumn.order==='asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n         return <i className=\"fa fa-sort-desc\"></i>\r\n\r\n\r\n       }\r\n\r\n\r\n\r\n    render() { \r\n        return (<thead>\r\n            <tr>\r\n               { this.props.columns.map(x=><th className=\"clickable\" key={x.path || x.key} onClick={()=>{this.raiseSort(x.path)}}>{x.label}{this.renderSortIcon(x)}</th>)}\r\n            </tr>\r\n        </thead>  );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React from 'react';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\n\r\n//זה צורה שבה הפונקציה מקבלת בתור ארגיומנט את המשתנים המסויימים של הפרופס!\r\n\r\nconst Table = ({   columns, data, onSort, sortColumn      }) => {\r\n   \r\n    \r\n\r\n    return (  <table className=\"table\">\r\n    <TableHeader  columns={columns} sortColumn={sortColumn} onSort={onSort}/>\r\n    <TableBody data={data} columns={columns} />\r\n   </table>);\r\n}\r\n \r\nexport default Table;","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\n//import {apiUrl} from '../config.json';\r\n\r\n//const apiEndpoint=apiUrl + \"/auth\";\r\nconst apiEndpoint=\"/auth\";\r\nconst tokenKey=\"token\";\r\n\r\nhttp.setJwt(getJwt()); //we call the httpService instead of httpservice call uys beacuse that prevent b-conditional-dependencies\r\n\r\n\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\n\r\nexport  async function login(email, password){\r\n  const {data:jwt}=await  http.post(apiEndpoint,{ email, password});\r\n  localStorage.setItem(tokenKey,jwt);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey,jwt);\r\n\r\n}\r\n\r\n\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt=localStorage.getItem(tokenKey);\r\n        const user=jwtDecode(jwt);\r\n        return user;\r\n        \r\n        }\r\n        catch(ex)\r\n        {\r\n          return null;\r\n        }\r\n}\r\n\r\nexport default {\r\nlogin,\r\nlogout,\r\ngetJwt,\r\ngetCurrentUser,\r\nloginWithJwt\r\n};","import React, { Component } from 'react';\r\nimport Like from './common/like';\r\nimport Table  from './common/table';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../services/authService';\r\nclass MoviesTable extends Component {\r\n   columns=[ {path:'title',label:'Title', content:x=><Link to={`/movies/${x._id}`}>{x.title}</Link>},\r\n             {path:'genre.name',label:'Genre'},\r\n             {path:'numberInStock',label:'Stock'},\r\n             {path:'dailyRentalRate',label:'Rate'},\r\n             {key:'like', content: x=> <Like liked={x.liked} onLike={()=>this.props.onLLike(x) } />}\r\n            //  {key:'Delete', content:x=><button className=\"btn btn-danger btn-sm\" id={index} onClick={()=>{this.props.onDelete(index)}}>Delete</button>},\r\n            \r\n\r\n   ];\r\n  deleteColumn= {key:'Delete2',  content :x=><button className=\"btn btn-danger btn-sm\"  onClick={()=>{this.props.onDelete2(x)}}>Delete</button>};\r\n\r\n   constructor(){\r\n     super();\r\n     const user=auth.getCurrentUser();\r\n     if(user && user.isAdmin)\r\n      this.columns.push(\r\n           this.deleteColumn);\r\n   }\r\n\r\n    render() { \r\n\r\n    const {paginatemov,  sortColumn,onSort, }=this.props;\r\n    console.log(paginatemov);\r\n\r\n    return ( \r\n      <Table  columns={this.columns} data={paginatemov} onSort={onSort} sortColumn={sortColumn}/>\r\n     );\r\n        \r\n    }\r\n}\r\n \r\nexport default MoviesTable ;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nconst SearchBox = ({value, onChange}) => {\r\n    return ( <input\r\n         type=\"text\"\r\n         name=\"query\"\r\n         className=\"from-control my-3\"\r\n         placeholder=\"Search...\"\r\n         value={value}\r\n         onChange={e=>onChange(e.currentTarget.value)}\r\n    \r\n  /> );\r\n}\r\n \r\nexport default SearchBox;","import { getMovies } from '../services/movieService';\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {toast} from 'react-toastify';\r\nimport Pagination from './common/pagination';\r\nimport {paginate} from '../utils/paginate';\r\nimport ListGroup from './common/listgroup';\r\nimport {getGenres} from '../services/genreService';\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './searchBox';\r\nimport { deleteMovie } from '../services/movieService';\r\nclass Mov extends Component {\r\n    state = {\r\n        \r\n        mov: [],\r\n        pageSize:4,\r\n        currentPage:1,\r\n        genres: [],\r\n        sortColumn:{path: 'title', order:'asc'},\r\n        searchQuery:\"\",\r\n        selectedGenre:null\r\n\r\n        \r\n        \r\n        \r\n       }\r\n       constructor(){\r\n           super();\r\n           console.log(this.state.mov);\r\n       }\r\n\r\nasync componentDidMount(){\r\n  const {data}=await getGenres();\r\n  const {data: movies}=await getMovies();\r\n  const newgenres=[{_id:'',name:'All Genres'},...data];\r\n  this.setState({mov: movies, genres: newgenres});\r\n}\r\n\r\nhandleSearch=query=>{\r\n//const query=e.currentTarget.value;\r\nthis.setState({searchQuery: query, selectedGenre: null, currentPage:1});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ngetPageData(){\r\n  const {pageSize,sortColumn,selectedGenre,searchQuery, currentPage}=this.state;\r\n  let filtered=this.state.mov;\r\n  if(searchQuery)\r\n      filtered=this.state.mov.filter(m=>\r\n         m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n  \r\n    else if(selectedGenre && selectedGenre._id)     \r\n   filtered=  this.state.mov.filter(m=> m.genre._id===selectedGenre._id);\r\n\r\n  const sorted=_.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n\r\n  const paginatemov=paginate(sorted,currentPage,pageSize);\r\n\r\n  return {totalCount: filtered.length, data:paginatemov};\r\n}\r\n\r\n\r\n    render() {\r\n\r\n      const {pageSize,sortColumn, currentPage}=this.state;\r\n      const {length:moveCount}=this.state.mov;\r\n      const {user}=this.props;\r\n       if(moveCount===0) return <p>There are no movies in the database.</p>\r\n       \r\n      \r\n      const {totalCount, data:paginatemov}=this.getPageData();  //destructuring the argument we wants!!\r\n//אנחנו מקבלים את הערכים טוטאלקאונט ודאטה שהפונקציה מחזירה ומשנים את השם של דאטה ל-פאגינאטמובב\r\n\r\n        return ( \r\n   \r\n    \r\n   \r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n\r\n    <div className=\"col-3\">\r\n    <ListGroup items={this.state.genres} selectedItem={this.state.selectedGenre}  onItemSelect={this.handleGenresSelect}/>\r\n    </div>\r\n    <div className=\"col\">\r\n    {user &&<Link to=\"/movies/new\" className=\"btn btn-primary\" style={{marginBootom:20}}>\r\n      New Movie\r\n    </Link>}\r\n    <p style={{fontWeight:'bold', fontSize:20}}>Showing  {totalCount}  movies in the database.</p>\r\n    <SearchBox value={this.state.searchQuery} onChange={this.handleSearch}/>\r\n    <MoviesTable onLLike={this.handleLike}\r\n    sortColumn={sortColumn} \r\n    paginatemov={paginatemov} \r\n    \r\n    onDelete2={this.handleDelete2} \r\n    onSort={this.handleSort} ></MoviesTable>\r\n<Pagination currentPage={currentPage}  itemCount={totalCount} pageSize={pageSize}  onPageChange={this.handlePageChange}\r\n/>\r\n\r\n\r\n\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n    \r\n       \r\n\r\n\r\n\r\n    );\r\n    }\r\n\r\n\r\n    handleSort=newSortColumn=>{\r\n\r\n      \r\n      \r\n      this.setState({sortColumn:newSortColumn});\r\n    }\r\n\r\n    handleGenresSelect=genre=>{\r\n\r\n     console.log(genre);\r\n     this.setState({selectedGenre: genre,  searchQuery:\"\", currentPage:1});\r\n\r\n\r\n    }\r\n\r\n  handlePageChange=page=>{\r\n  \r\n    this.setState({currentPage:page});\r\n    //const newArr=paginate(this.state.mov,page,this.state.pageSize);\r\n\r\n\r\n  }\r\n\r\n\r\n    handleLike=(x)=>{\r\n\r\n      console.log(\"this\",this);\r\n    \r\n      const newL=[...this.state.mov];\r\n      const index=newL.indexOf(x);\r\n      newL[index]={...x};\r\n      newL[index].liked=!newL[index].liked;\r\n     \r\n      this.setState({mov:newL});\r\n\r\n\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n          \r\n      let newMov=[...this.state.mov];\r\n       //console.log(newMov);\r\n      newMov=newMov.filter((obj, index)=> index!==id);\r\n      //console.log(newMov);\r\n      this.setState({mov:newMov});\r\n\r\n  \r\n      }\r\n\r\n\r\n      //the second way to change the list...we do not copy the mov we just get by fulter something similar without the one we delete\r\n      handleDelete2=async (movie)=>{\r\n        const originalMovies=this.state.mov;\r\n        const mov=originalMovies.filter(item=>item._id!==movie._id);\r\n        \r\n        this.setState({mov:mov});\r\n\r\n      try{await deleteMovie(movie._id);}\r\n       catch(ex){\r\n         if(ex.response&&ex.response.status===404)\r\n               toast.error(\"this movie  has already been deleted!\");\r\n        this.setState({mov:originalMovies});  \r\n       }\r\n      }\r\n}\r\n \r\nexport default Mov;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize){\r\n\r\n\r\n    const startIndex=(pageNumber-1)*pageSize;\r\n    console.log(\"startIndex\",startIndex);\r\n\r\n    \r\n    return  _(items)\r\n          .slice(startIndex)\r\n          .take(pageSize)\r\n          .value();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //_.slice(items,startIndex);\r\n    //_.take(); //how much items you want to take!!\r\n    //.value() change the array from lodash wrapper to regular\r\n    //_items() change the array from regular to lodash wrapper\r\n\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nclass Rentals extends Component {\r\n    \r\n    render() { \r\n        return ( <h1>Rentals</h1> );\r\n    }\r\n}\r\n \r\nexport default Rentals ;","import React, { Component } from 'react';\r\nclass NotFound extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (<h1>Not Found</h1>  );\r\n    }\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nclass Customers extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (<h1>Customers</h1>  );\r\n    }\r\n}\r\n \r\nexport default Customers;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Link} from \"react-router-dom\";\r\nclass NavBar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n  <button \r\n  className=\"navbar-toggler\" \r\n  type=\"button\"\r\n   data-toggle=\"collapse\" \r\n   data-target=\"#navbarNavAltMarkup\"\r\n    aria-controls=\"navbarNavAltMarkup\" \r\n    aria-expanded=\"false\" \r\n    aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n      \r\n        <NavLink className=\"nav-item nav-link\" to=\"/movies\">Movies</NavLink>\r\n      \r\n        <NavLink className=\"nav-item nav-link\" to=\"/customers\">Customers</NavLink>\r\n      \r\n        <NavLink className=\"nav-item nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n        \r\n        {this.props.user && \r\n        <React.Fragment>\r\n          \r\n          <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/profile\">{this.props.user.name}</NavLink>\r\n         \r\n        </React.Fragment>}\r\n      \r\n\r\n\r\n\r\n\r\n\r\n        {!this.props.user && \r\n        <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\r\n        </React.Fragment>}\r\n      \r\n      \r\n      \r\n      \r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n//","import React from 'react';\r\n// value onChange,type, x \r\n//...rest - contain type onchange and value\r\nconst Input = ({name, label,error,...rest}) => {\r\n    return ( <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input \r\n    name={name}\r\n    {...rest} //include type onChange  value!!\r\n    id={name}  \r\n    //{...rset} is equal to value={value} onChange={onChange} type={type}  name={name}!!!!!\r\n   \r\n    //autoFocus \r\n    //ref={x} //way1 in loginForm.jsx\r\n    className=\"form-control\" >\r\n    </input>\r\n    \r\n    { error &&<div className=\"alert alert-danger\">{error}</div>}\r\n</div> );\r\n}\r\n \r\nexport default Input;","import React, { Component } from 'react';\r\nconst Select = ({name, label, options, error, value, ...rest}) => {\r\n    return ( <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <select \r\n    value={value}\r\n    name={name}\r\n    {...rest} //include type onChange  value!!\r\n    id={name} \r\n     \r\n    //{...rset} is equal to value={value} onChange={onChange} type={type}  name={name}!!!!!\r\n     className=\"form-control\" >\r\n              <option value=\"\" />\r\n              {options.map(option=>(\r\n                <option key={option._id} value={option._id}>\r\n                {option.name}\r\n                </option>\r\n                ))}\r\n\r\n    </select>\r\n    {value}\r\n    { error &&<div className=\"alert alert-danger\">{error}</div>}\r\n</div> );\r\n}\r\n \r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\nclass Form extends Component {\r\n    state={\r\n        data: {},\r\n        errors:{}\r\n        \r\n    };\r\n    validateProperty=({name, value})=>{\r\n        console.log(\"this in validateProperty\",this)\r\n        const obj={[name]:value};//obj[name]=value; the same as above!!\r\n        const schema={[name]:this.schema[name]};\r\n        const {error}=Joi.validate(obj,schema);\r\n       //  if(error) return null;\r\n       //  return error.details[0].message;// maybe we have a lot of errors, but we want to return the first error!!!\r\n        return error ? error.details[0].message : null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n       //  if(name===\"username\")\r\n       //  {\r\n       //    if(value.trim()==='') return 'Username is requires.';\r\n       //    //...\r\n       //  }\r\n       //  if(name===\"password\")\r\n       //  {\r\n       //    if(value.trim()==='') return 'Password is requires.';\r\n       //    //...\r\n       //  }\r\n\r\n        \r\n\r\n         \r\n   }\r\n    validate=()=>{\r\n        console.log(\"this in validate\",this)\r\n        const {error}=Joi.validate(this.state.data,this.schema, {abortEarly:false});\r\n        if(!error) return null;//there are no error \r\n        const errors={};\r\n        for(let item of error.details)\r\n        {\r\n            errors[item.path[0]]=item.message;\r\n        }\r\n       return errors;\r\n\r\n\r\n        // const errors={};\r\n        // const {data}=this.state;\r\n        // if(data.username.trim()==='')\r\n        //   errors.username=\"Username is required\";\r\n        // if(data.password.trim()==='')\r\n        //   errors.password=\"Password is required\";\r\n        // return Object.keys(errors).length===0 ? null: errors; \r\n        \r\n         }\r\n\r\n\r\n         handleSubmit=e=>{\r\n\r\n            //the good place to call the server!\r\n           //  const data=this.username.current.value;//1 way\r\n           //  console.log('Submitted', data);\r\n   \r\n           e.preventDefault();\r\n   \r\n           const errors=this.validate();\r\n           this.setState({errors: errors || {}});\r\n           if(errors) return; //if we have error (not null) we do not call server!!\r\n           console.log(\"this in handleSubmit\",this); //because we are in an arrow functon. the this is inherited from the object/classs component that it comes from\r\n           this.doSubmit();\r\n          \r\n       }\r\n\r\n\r\n\r\n       \r\n    handleChange=({currentTarget:input})=>{\r\n\r\n        console.log(\"this in handleChange\",this)\r\n        const errors={...this.state.errors};\r\n        const errorMessage=this.validateProperty(input);\r\n        if(errorMessage) errors[input.name]=errorMessage;\r\n        else delete errors[input.name];\r\n        //this.setState({errors});// 1\r\n\r\n        console.log(\"currenttarget\",input.value);\r\n        const data={...this.state.data};\r\n        data[input.name]=input.value;//\r\n        //  setTimeout(()=>this.setState({data}),50000);//1\r\n        this.setState({data, errors});//2\r\n    }\r\n    renderInput(name,label, type=\"text\"){\r\n        console.log(\"this in renderInput\", this);\r\n        const {data, errors} =this.state;\r\n        return( <Input  \r\n            // x={this.username} \r\n            type={type}\r\n            name={name}\r\n            label={label} \r\n            value={data[name]} \r\n            onChange={this.handleChange}\r\n            error={errors[name]} />);\r\n       \r\n    }\r\n\r\n    renderSelect(name,label,options){\r\n        console.log(\"rendered the SELECT\");\r\n        const {data, errors} =this.state;\r\n        const val=(options.filter(x=>{ if(x._id===data[name]) return x;})[0])\r\n        console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", val);\r\n        return( <Select  \r\n            // x={this.username} \r\n            options={options}\r\n            name={name}\r\n            label={label} \r\n            value={ data[name]} \r\n            onChange={this.handleChange}\r\n            error={errors[name]} />);\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderButton(label){\r\n      console.log(\"this in renderButton\", this);\r\n      return  <button disabled={this.validate()} className=\"btn btn-primary\">{label}</button>\r\n    }\r\n\r\n   \r\n}\r\n \r\nexport default Form;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { saveMovie , getMovie} from '../services/movieService';\r\nimport {getGenres} from '../services/genreService';\r\n\r\n\r\nclass MovieForm extends Form{\r\n        state={\r\n                data: {title:'', genreId:'', numberInStock:'',dailyRentalRate:''},\r\n                errors:{},\r\n                genres: []\r\n                \r\n            };\r\n        \r\n            schema={\r\n                _id: Joi.string(),    \r\n                title: Joi.string().required().label('Title'),\r\n                genreId: Joi.string().required().label('GenreId'),\r\n                numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\r\n                dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily Rental Rate')\r\n\r\n            };\r\n            async populateGenres(){\r\n                const {data:genres}=await getGenres();\r\n                this.setState({genres});\r\n            }\r\n\r\n            async populateMovie(){\r\n\r\n                const movieId=this.props.match.params.id;\r\n                if(movieId===\"new\") return;\r\n\r\n\r\n                try{\r\n                const {data:movie}=await getMovie(movieId);\r\n                this.setState({data: this.mapToViewModel(movie)});\r\n                }\r\n               \r\n                catch(ex){\r\n                \r\n                if(ex.response&&ex.response.status===404)\r\n                 this.props.history.replace(\"/not-found\");//the back page is will be good withreplace instead of push\r\n                //we write reurn this....in order to live the code and not continue!!!\r\n\r\n                 }\r\n                //console.log(\"DDDDDDDDDDDDDDDDDDDDdd\",this.mapToViewModel(movie).genreId);\r\n\r\n\r\n            }\r\n      async  componentDidMount(){\r\n                \r\n               await this.populateGenres();\r\n               await this.populateMovie();\r\n        \r\n        }\r\n\r\n        mapToViewModel(movie){\r\n           return {\r\n               _id: movie._id,\r\n               title: movie.title,\r\n               genreId: movie.genre._id,\r\n               numberInStock: movie.numberInStock,\r\n               dailyRentalRate: movie.dailyRentalRate\r\n\r\n           };\r\n\r\n        }\r\n         doSubmit= async ()=>{\r\n                //call the server\r\n               await saveMovie(this.state.data);\r\n                this.props.history.push(\"/movies\");\r\n            }\r\n        \r\n\r\n\r\n        render() { \r\n                return (<div >\r\n                        \r\n                        <form  onSubmit={this.handleSubmit}>\r\n                            {this.renderInput(\"title\",\"Title\")}\r\n                            {this.renderSelect(\"genreId\",\"Genre\",this.state.genres)}\r\n                            {this.renderInput(\"numberInStock\",\"Number In Stock\",\"number\")}\r\n                            {this.renderInput(\"dailyRentalRate\",\"Rate\")}\r\n                            \r\n                            {this.renderButton(\"Save\")}\r\n                        </form>\r\n                    </div>  );\r\n\r\n        }\r\n}\r\n \r\nexport default MovieForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const MovieForm =({history, match})=> {\r\n    \r\n    \r\n//         return ( <div>\r\n//                 <h1>Movie Form {match.params.id}</h1> <button className=\"btn btn-primary\" onClick={()=>history.push(\"/movies\")}>Save</button>\r\n//                 </div> );\r\n\r\n//     }\r\n\r\n// export default MovieForm;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport authService, {login} from '../services/authService';\r\nimport { Redirect } from 'react-router-dom';\r\nclass LoginForm extends Form {\r\n//     username=React.createRef();//1 way\r\n//    componentDidMount(){\r\n//        this.username.current.focus(); //1 way\r\n//    }\r\n\r\n   \r\n    // the old way!!!\r\n    // handleChange=({e})=>{\r\n    //     const data={...this.state.data};\r\n    //     data[e.currentTarget.name]=e.currentTarget.value;//\r\n    //     this.setState({data});\r\n    // }\r\n    \r\n    schema={\r\n        username: Joi.string().required().label('UserName'),\r\n        password: Joi.string().required().label('PassWord')\r\n    };\r\n    \r\n   \r\n    doSubmit=async()=>{\r\n        //call the server\r\n        console.log(\"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSubmitted\");\r\n        try{\r\n           const {data}=this.state;\r\n           //const {data:jwt}=await login(data.username,data.password);\r\n           //localStorage.setItem('token',jwt);\r\n           await login(data.username,data.password);\r\n           //this.props.history.push('/');\r\n           console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaA\",data.username);\r\n           const {state} =this.props.location;// protectedroute.js deliver the state to here\r\n           window.location = state ? state.from.pathname : '/';\r\n           \r\n        }\r\n        catch(ex){\r\n          if(ex.response&&ex.response.status===400){\r\n              const errors={...this.state.errors};\r\n              errors.username=ex.response.data;// update the state with the errors from the server!!\r\n              this.setState({errors});\r\n          }\r\n        }\r\n        \r\n    }\r\n\r\n    state={\r\n        data: {username:'', password:''},\r\n        errors:{}\r\n        \r\n    };\r\n    render() {\r\n     if(authService.getCurrentUser()) return <Redirect to=\"/\"/>;\r\n        return ( \r\n\r\n/// we write in inpute ref={this.username} that is the 1 way to soleve the connection with the form!\r\n      <div >\r\n          <h1 className=\"TitleofLogin\">Login</h1>\r\n          <form  onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"username\",\"Username\")}\r\n              {this.renderInput(\"password\",\"Password\",\"password\")}\r\n              {this.renderButton(\"LogIn\")}\r\n          </form>\r\n      </div>\r\n\r\n\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import http from './httpService';\r\n// import {apiUrl} from '../config.json';\r\n\r\n//const apiEndpoint=apiUrl + \"/users\";\r\nconst apiEndpoint=\"/users\";\r\nexport function register(user){\r\nreturn http.post(apiEndpoint,{email:user.username,\r\n                       password:user.password,\r\n                       name: user.name});\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\nclass RegisterForm extends Form{\r\n    state={\r\n        data: {username:'', password:'', name:''},\r\n        errors:{}\r\n        \r\n    };\r\n    schema={\r\n        username: Joi.string().required().email().label('UserName'),\r\n        password: Joi.string().required().min(5).label('PassWord'),\r\n        name: Joi.string().required().label('Name')\r\n    };\r\n\r\n    doSubmit=async()=>{\r\n        //call the server\r\n        try{\r\n        //console.log(\"Submitted\");\r\n        const response=await userService.register(this.state.data);\r\n        //console.log(response);\r\n        auth.loginWithJwt(response.headers['x-auth-token']);\r\n        //localStorage.setItem('token',response.headers['x-auth-token']);\r\n        //this.props.history.push('/');\r\n        window.location='/'; //need refresh in order to detect that we have valid jwt and the user is logged in ! and we do not show the user the login navbar and register navbar\r\n        }\r\n        catch(ex)\r\n        {\r\n            if(ex.response&&ex.response.status===400)\r\n            {\r\n                const errors={...this.state.errors};\r\n                errors.username=ex.response.data;\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        return (  <div >\r\n            <h1>Register</h1>\r\n            <form  onSubmit={this.handleSubmit}>\r\n                {this.renderInput(\"username\",\"Username\")}\r\n                {this.renderInput(\"password\",\"Password\",\"password\")}\r\n                {this.renderInput(\"name\",\"Name\")}\r\n                {this.renderButton(\"Register\")}\r\n            </form>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport auth  from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    \r\n    componentDidMount(){\r\n        //localStorage.removeItem(\"token\");\r\n        auth.logout();\r\n        window.location=\"/\";\r\n    }\r\n\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React, { Component } from 'react';\r\nimport auth from '../../services/authService';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n\r\nconst ProtectedRoute = ({path, component:Component, render, ...rest}) => {\r\n    return ( <Route path={path}\r\n    {...rest}\r\n    render={props=>\r\n      {if(!auth.getCurrentUser()) return <Redirect to={{pathname: \"/login\", state:{from: props.location}}} />; \r\n      return Component ? <Component {...props} /> : render(props);\r\n      }\r\n    }\r\n    \r\n    /> );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport './App.css';\nimport Mov from './components/component';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport Rentals from './components/rental';\nimport NotFound from './components/notFound';\nimport Customers from './components/customers';\nimport NavBar from './components/navbar';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport { ToastContainer } from 'react-toastify';\nimport Logout from './components/logout.';\nimport auth from './services/authService';\nimport ProtectedRoute from './components/common/protectedRoute';\nclass App extends Component {\n  state={};\n  componentDidMount(){\n    const user=auth.getCurrentUser();\n    this.setState({user});\n\n  }\n  render() {\n    const {user}=this.state;\n    return (\n      <React.Fragment>\n      <ToastContainer/>\n      <NavBar user={user}/>\n      <main className=\"container\">\n            <Switch>\n            <Route path=\"/register\" component={RegisterForm}/> \n            <Route path=\"/login\" component={LoginForm}/>\n            <Route path=\"/logout\" component={Logout}/>\n\n            \n            \n            <ProtectedRoute\n            path=\"/movies/:id\" \n            component={MovieForm}\n            \n            />\n\n            <Route path=\"/movies\" \n            render={props=> <Mov {...props} user={this.state.user}/>}\n            />\n            <Route path=\"/customers\" component={Customers}/>\n            <Route path=\"/rentals\" component={Rentals}/>\n            <Redirect from=\"/\" exact to=\"/movies\"/>\n            <Route path=\"/not-found\" component={NotFound}/>\n            <Redirect to=\"/not-found\"/>\n            </Switch>\n\n\n      </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nconsole.log(\"SUPERMAN\",process.env.REACT_APP_NAME);// all the environment variables.\n\n\n\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}